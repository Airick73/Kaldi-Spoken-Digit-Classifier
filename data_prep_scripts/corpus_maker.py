import os

# Mapping of digits to their word representations
digit_to_word = {
    '0': 'zero',
    '1': 'one',
    '2': 'two',
    '3': 'three',
    '4': 'four',
    '5': 'five',
    '6': 'six',
    '7': 'seven',
    '8': 'eight',
    '9': 'nine'
}

def digits_to_words(digit_string):
    """Convert a string of digits separated by underscores to words separated by spaces."""
    return ' '.join(digit_to_word[digit] for digit in digit_string.split('_'))

def generate_corpus(directory, output_file):
    # Set to store unique utterances
    utterances = set()

    # Traverse the directory
    for speaker in os.listdir(directory):
        speaker_dir = os.path.join(directory, speaker)
        if os.path.isdir(speaker_dir):
            for wav_file in os.listdir(speaker_dir):
                if wav_file.endswith('.wav'):
                    # Extract the combination from the wav file name
                    combination = os.path.splitext(wav_file)[0]
                    # Convert digits to words
                    transcription = digits_to_words(combination)
                    # Add the transcription to the set (to ensure uniqueness)
                    utterances.add(transcription)

    # Write the unique utterances to the output file
    with open(output_file, 'w') as outfile:
        for utterance in sorted(utterances):
            outfile.write(f"{utterance}\n")

# Example usage
directory = "./random_combinations"  # Replace with your directory path to the random combinations generated by digit_combinator.py
output_file = "./corpus.txt"  # Define the output file path

generate_corpus(directory, output_file)
